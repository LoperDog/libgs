// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rest.proto

#include "rest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Roomlist_RoomlistEntry_DoNotUse;
}  // namespace protobuf_rest_2eproto
class SearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest>
      _instance;
} _SearchRequest_default_instance_;
class LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Login>
      _instance;
} _Login_default_instance_;
class Roomlist_RoomlistEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Roomlist_RoomlistEntry_DoNotUse>
      _instance;
} _Roomlist_RoomlistEntry_DoNotUse_default_instance_;
class RoomlistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Roomlist>
      _instance;
} _Roomlist_default_instance_;
class RoommakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Roommake>
      _instance;
} _Roommake_default_instance_;
class RoominsertDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Roominsert>
      _instance;
} _Roominsert_default_instance_;
class ChatmsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chatmsg>
      _instance;
} _Chatmsg_default_instance_;
namespace protobuf_rest_2eproto {
static void InitDefaultsSearchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SearchRequest_default_instance_;
    new (ptr) ::SearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SearchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchRequest}, {}};

static void InitDefaultsLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Login_default_instance_;
    new (ptr) ::Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogin}, {}};

static void InitDefaultsRoomlist_RoomlistEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Roomlist_RoomlistEntry_DoNotUse_default_instance_;
    new (ptr) ::Roomlist_RoomlistEntry_DoNotUse();
  }
  ::Roomlist_RoomlistEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Roomlist_RoomlistEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoomlist_RoomlistEntry_DoNotUse}, {}};

static void InitDefaultsRoomlist() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Roomlist_default_instance_;
    new (ptr) ::Roomlist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Roomlist::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Roomlist =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomlist}, {
      &protobuf_rest_2eproto::scc_info_Roomlist_RoomlistEntry_DoNotUse.base,}};

static void InitDefaultsRoommake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Roommake_default_instance_;
    new (ptr) ::Roommake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Roommake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Roommake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoommake}, {}};

static void InitDefaultsRoominsert() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Roominsert_default_instance_;
    new (ptr) ::Roominsert();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Roominsert::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Roominsert =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoominsert}, {}};

static void InitDefaultsChatmsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Chatmsg_default_instance_;
    new (ptr) ::Chatmsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Chatmsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Chatmsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChatmsg}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SearchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Roomlist_RoomlistEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Roomlist.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Roommake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Roominsert.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Chatmsg.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, page_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SearchRequest, result_per_page_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Login, returndata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist_RoomlistEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist_RoomlistEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist_RoomlistEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist_RoomlistEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist, roomlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roomlist, length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roommake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roommake, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roommake, returndata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roominsert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roominsert, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Roominsert, returndata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Chatmsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Chatmsg, chat_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SearchRequest)},
  { 8, -1, sizeof(::Login)},
  { 15, 22, sizeof(::Roomlist_RoomlistEntry_DoNotUse)},
  { 24, -1, sizeof(::Roomlist)},
  { 31, -1, sizeof(::Roommake)},
  { 38, -1, sizeof(::Roominsert)},
  { 45, -1, sizeof(::Chatmsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Roomlist_RoomlistEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Roomlist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Roommake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Roominsert_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Chatmsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rest.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nrest.proto\"L\n\rSearchRequest\022\r\n\005query\030\001"
      " \001(\t\022\023\n\013page_number\030\002 \001(\005\022\027\n\017result_per_"
      "page\030\003 \001(\005\"v\n\005Login\022\020\n\010nickname\030\001 \001(\t\022&\n"
      "\nreturndata\030\002 \003(\0162\022.Login.MessageType\"3\n"
      "\013MessageType\022\013\n\007Success\020\000\022\013\n\007Overlap\020\001\022\n"
      "\n\006Failed\020\002\"v\n\010Roomlist\022)\n\010roomlist\030\001 \003(\013"
      "2\027.Roomlist.RoomlistEntry\022\016\n\006length\030\002 \001("
      "\003\032/\n\rRoomlistEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"e\n\010Roommake\022\020\n\010RoomName\030\001 \001(\t"
      "\022\022\n\nreturndata\030\002 \003(\003\"3\n\013MessageType\022\013\n\007S"
      "uccess\020\000\022\013\n\007Overlap\020\001\022\n\n\006Failed\020\002\"d\n\nRoo"
      "minsert\022\r\n\005index\030\001 \001(\003\022\022\n\nreturndata\030\002 \003"
      "(\003\"3\n\013MessageType\022\013\n\007Success\020\000\022\013\n\007Overla"
      "p\020\001\022\n\n\006Failed\020\002\"\027\n\007Chatmsg\022\014\n\004chat\030\001 \001(\t"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 568);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rest_2eproto
const ::google::protobuf::EnumDescriptor* Login_MessageType_descriptor() {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rest_2eproto::file_level_enum_descriptors[0];
}
bool Login_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Login_MessageType Login::Success;
const Login_MessageType Login::Overlap;
const Login_MessageType Login::Failed;
const Login_MessageType Login::MessageType_MIN;
const Login_MessageType Login::MessageType_MAX;
const int Login::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Roommake_MessageType_descriptor() {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rest_2eproto::file_level_enum_descriptors[1];
}
bool Roommake_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Roommake_MessageType Roommake::Success;
const Roommake_MessageType Roommake::Overlap;
const Roommake_MessageType Roommake::Failed;
const Roommake_MessageType Roommake::MessageType_MIN;
const Roommake_MessageType Roommake::MessageType_MAX;
const int Roommake::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Roominsert_MessageType_descriptor() {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rest_2eproto::file_level_enum_descriptors[2];
}
bool Roominsert_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Roominsert_MessageType Roominsert::Success;
const Roominsert_MessageType Roominsert::Overlap;
const Roominsert_MessageType Roominsert::Failed;
const Roominsert_MessageType Roominsert::MessageType_MIN;
const Roominsert_MessageType Roominsert::MessageType_MAX;
const int Roominsert::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kQueryFieldNumber;
const int SearchRequest::kPageNumberFieldNumber;
const int SearchRequest::kResultPerPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_SearchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  ::memcpy(&page_number_, &from.page_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_per_page_) -
    reinterpret_cast<char*>(&page_number_)) + sizeof(result_per_page_));
  // @@protoc_insertion_point(copy_constructor:SearchRequest)
}

void SearchRequest::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_per_page_) -
      reinterpret_cast<char*>(&page_number_)) + sizeof(result_per_page_));
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_SearchRequest.base);
  return *internal_default_instance();
}


void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_per_page_) -
      reinterpret_cast<char*>(&page_number_)) + sizeof(result_per_page_));
  _internal_metadata_.Clear();
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SearchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string query = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), static_cast<int>(this->query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SearchRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result_per_page = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_per_page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->query(), output);
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  // int32 result_per_page = 3;
  if (this->result_per_page() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result_per_page(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string query = 1;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), static_cast<int>(this->query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SearchRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->query(), target);
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  // int32 result_per_page = 3;
  if (this->result_per_page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result_per_page(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string query = 1;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // int32 result_per_page = 3;
  if (this->result_per_page() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result_per_page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.result_per_page() != 0) {
    set_result_per_page(from.result_per_page());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_number_, other->page_number_);
  swap(result_per_page_, other->result_per_page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kNicknameFieldNumber;
const int Login::kReturndataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_Login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      returndata_(from.returndata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:Login)
}

void Login::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:Login)
  SharedDtor();
}

void Login::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login& Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_Login.base);
  return *internal_default_instance();
}


void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  returndata_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Login.MessageType returndata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_returndata(static_cast< ::Login_MessageType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_returndata(static_cast< ::Login_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // repeated .Login.MessageType returndata = 2;
  if (this->returndata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_returndata_cached_byte_size_));
  }
  for (int i = 0, n = this->returndata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->returndata(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // repeated .Login.MessageType returndata = 2;
  if (this->returndata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _returndata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->returndata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Login.MessageType returndata = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->returndata_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->returndata(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _returndata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  returndata_.MergeFrom(from.returndata_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  returndata_.InternalSwap(&other->returndata_);
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Roomlist_RoomlistEntry_DoNotUse::Roomlist_RoomlistEntry_DoNotUse() {}
Roomlist_RoomlistEntry_DoNotUse::Roomlist_RoomlistEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Roomlist_RoomlistEntry_DoNotUse::MergeFrom(const Roomlist_RoomlistEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Roomlist_RoomlistEntry_DoNotUse::GetMetadata() const {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[2];
}
void Roomlist_RoomlistEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Roomlist::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Roomlist::kRoomlistFieldNumber;
const int Roomlist::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Roomlist::Roomlist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_Roomlist.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Roomlist)
}
Roomlist::Roomlist(const Roomlist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomlist_.MergeFrom(from.roomlist_);
  length_ = from.length_;
  // @@protoc_insertion_point(copy_constructor:Roomlist)
}

void Roomlist::SharedCtor() {
  length_ = GOOGLE_LONGLONG(0);
}

Roomlist::~Roomlist() {
  // @@protoc_insertion_point(destructor:Roomlist)
  SharedDtor();
}

void Roomlist::SharedDtor() {
}

void Roomlist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Roomlist::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Roomlist& Roomlist::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_Roomlist.base);
  return *internal_default_instance();
}


void Roomlist::Clear() {
// @@protoc_insertion_point(message_clear_start:Roomlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomlist_.Clear();
  length_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Roomlist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Roomlist)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, string> roomlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Roomlist_RoomlistEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Roomlist_RoomlistEntry_DoNotUse,
              ::google::protobuf::int64, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::std::string > > parser(&roomlist_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Roomlist.RoomlistEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Roomlist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Roomlist)
  return false;
#undef DO_
}

void Roomlist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Roomlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, string> roomlist = 1;
  if (!this->roomlist().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Roomlist.RoomlistEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->roomlist().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->roomlist().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
          it = this->roomlist().begin();
          it != this->roomlist().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Roomlist_RoomlistEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roomlist_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<Roomlist_RoomlistEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
          it = this->roomlist().begin();
          it != this->roomlist().end(); ++it) {
        entry.reset(roomlist_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Roomlist)
}

::google::protobuf::uint8* Roomlist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Roomlist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, string> roomlist = 1;
  if (!this->roomlist().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Roomlist.RoomlistEntry.value");
      }
    };

    if (deterministic &&
        this->roomlist().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->roomlist().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
          it = this->roomlist().begin();
          it != this->roomlist().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Roomlist_RoomlistEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roomlist_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<Roomlist_RoomlistEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
          it = this->roomlist().begin();
          it != this->roomlist().end(); ++it) {
        entry.reset(roomlist_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Roomlist)
  return target;
}

size_t Roomlist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Roomlist)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, string> roomlist = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roomlist_size());
  {
    ::std::unique_ptr<Roomlist_RoomlistEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::std::string >::const_iterator
        it = this->roomlist().begin();
        it != this->roomlist().end(); ++it) {
      entry.reset(roomlist_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Roomlist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Roomlist)
  GOOGLE_DCHECK_NE(&from, this);
  const Roomlist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Roomlist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Roomlist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Roomlist)
    MergeFrom(*source);
  }
}

void Roomlist::MergeFrom(const Roomlist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Roomlist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomlist_.MergeFrom(from.roomlist_);
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void Roomlist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Roomlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Roomlist::CopyFrom(const Roomlist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Roomlist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Roomlist::IsInitialized() const {
  return true;
}

void Roomlist::Swap(Roomlist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Roomlist::InternalSwap(Roomlist* other) {
  using std::swap;
  roomlist_.Swap(&other->roomlist_);
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Roomlist::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Roommake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Roommake::kRoomNameFieldNumber;
const int Roommake::kReturndataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Roommake::Roommake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_Roommake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Roommake)
}
Roommake::Roommake(const Roommake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      returndata_(from.returndata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  // @@protoc_insertion_point(copy_constructor:Roommake)
}

void Roommake::SharedCtor() {
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Roommake::~Roommake() {
  // @@protoc_insertion_point(destructor:Roommake)
  SharedDtor();
}

void Roommake::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Roommake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Roommake::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Roommake& Roommake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_Roommake.base);
  return *internal_default_instance();
}


void Roommake::Clear() {
// @@protoc_insertion_point(message_clear_start:Roommake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  returndata_.Clear();
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Roommake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Roommake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string RoomName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Roommake.RoomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 returndata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_returndata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_returndata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Roommake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Roommake)
  return false;
#undef DO_
}

void Roommake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Roommake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RoomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Roommake.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomname(), output);
  }

  // repeated int64 returndata = 2;
  if (this->returndata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _returndata_cached_byte_size_));
  }
  for (int i = 0, n = this->returndata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->returndata(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Roommake)
}

::google::protobuf::uint8* Roommake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Roommake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string RoomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Roommake.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomname(), target);
  }

  // repeated int64 returndata = 2;
  if (this->returndata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _returndata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->returndata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Roommake)
  return target;
}

size_t Roommake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Roommake)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 returndata = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->returndata_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _returndata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string RoomName = 1;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Roommake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Roommake)
  GOOGLE_DCHECK_NE(&from, this);
  const Roommake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Roommake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Roommake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Roommake)
    MergeFrom(*source);
  }
}

void Roommake::MergeFrom(const Roommake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Roommake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  returndata_.MergeFrom(from.returndata_);
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
}

void Roommake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Roommake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Roommake::CopyFrom(const Roommake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Roommake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Roommake::IsInitialized() const {
  return true;
}

void Roommake::Swap(Roommake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Roommake::InternalSwap(Roommake* other) {
  using std::swap;
  returndata_.InternalSwap(&other->returndata_);
  roomname_.Swap(&other->roomname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Roommake::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Roominsert::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Roominsert::kIndexFieldNumber;
const int Roominsert::kReturndataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Roominsert::Roominsert()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_Roominsert.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Roominsert)
}
Roominsert::Roominsert(const Roominsert& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      returndata_(from.returndata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:Roominsert)
}

void Roominsert::SharedCtor() {
  index_ = GOOGLE_LONGLONG(0);
}

Roominsert::~Roominsert() {
  // @@protoc_insertion_point(destructor:Roominsert)
  SharedDtor();
}

void Roominsert::SharedDtor() {
}

void Roominsert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Roominsert::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Roominsert& Roominsert::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_Roominsert.base);
  return *internal_default_instance();
}


void Roominsert::Clear() {
// @@protoc_insertion_point(message_clear_start:Roominsert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  returndata_.Clear();
  index_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Roominsert::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Roominsert)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 returndata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_returndata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_returndata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Roominsert)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Roominsert)
  return false;
#undef DO_
}

void Roominsert::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Roominsert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  // repeated int64 returndata = 2;
  if (this->returndata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _returndata_cached_byte_size_));
  }
  for (int i = 0, n = this->returndata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->returndata(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Roominsert)
}

::google::protobuf::uint8* Roominsert::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Roominsert)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  // repeated int64 returndata = 2;
  if (this->returndata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _returndata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->returndata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Roominsert)
  return target;
}

size_t Roominsert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Roominsert)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 returndata = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->returndata_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _returndata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Roominsert::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Roominsert)
  GOOGLE_DCHECK_NE(&from, this);
  const Roominsert* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Roominsert>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Roominsert)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Roominsert)
    MergeFrom(*source);
  }
}

void Roominsert::MergeFrom(const Roominsert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Roominsert)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  returndata_.MergeFrom(from.returndata_);
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void Roominsert::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Roominsert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Roominsert::CopyFrom(const Roominsert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Roominsert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Roominsert::IsInitialized() const {
  return true;
}

void Roominsert::Swap(Roominsert* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Roominsert::InternalSwap(Roominsert* other) {
  using std::swap;
  returndata_.InternalSwap(&other->returndata_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Roominsert::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Chatmsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chatmsg::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chatmsg::Chatmsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rest_2eproto::scc_info_Chatmsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Chatmsg)
}
Chatmsg::Chatmsg(const Chatmsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chat().size() > 0) {
    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
  // @@protoc_insertion_point(copy_constructor:Chatmsg)
}

void Chatmsg::SharedCtor() {
  chat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Chatmsg::~Chatmsg() {
  // @@protoc_insertion_point(destructor:Chatmsg)
  SharedDtor();
}

void Chatmsg::SharedDtor() {
  chat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Chatmsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Chatmsg::descriptor() {
  ::protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Chatmsg& Chatmsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rest_2eproto::scc_info_Chatmsg.base);
  return *internal_default_instance();
}


void Chatmsg::Clear() {
// @@protoc_insertion_point(message_clear_start:Chatmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Chatmsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Chatmsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string chat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chat().data(), static_cast<int>(this->chat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Chatmsg.chat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Chatmsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Chatmsg)
  return false;
#undef DO_
}

void Chatmsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Chatmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chat = 1;
  if (this->chat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Chatmsg.chat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Chatmsg)
}

::google::protobuf::uint8* Chatmsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Chatmsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chat = 1;
  if (this->chat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chat().data(), static_cast<int>(this->chat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Chatmsg.chat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Chatmsg)
  return target;
}

size_t Chatmsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Chatmsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string chat = 1;
  if (this->chat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chatmsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Chatmsg)
  GOOGLE_DCHECK_NE(&from, this);
  const Chatmsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Chatmsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Chatmsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Chatmsg)
    MergeFrom(*source);
  }
}

void Chatmsg::MergeFrom(const Chatmsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Chatmsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chat().size() > 0) {

    chat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_);
  }
}

void Chatmsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Chatmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chatmsg::CopyFrom(const Chatmsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Chatmsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chatmsg::IsInitialized() const {
  return true;
}

void Chatmsg::Swap(Chatmsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chatmsg::InternalSwap(Chatmsg* other) {
  using std::swap;
  chat_.Swap(&other->chat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Chatmsg::GetMetadata() const {
  protobuf_rest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SearchRequest* Arena::CreateMaybeMessage< ::SearchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SearchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Login* Arena::CreateMaybeMessage< ::Login >(Arena* arena) {
  return Arena::CreateInternal< ::Login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Roomlist_RoomlistEntry_DoNotUse* Arena::CreateMaybeMessage< ::Roomlist_RoomlistEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Roomlist_RoomlistEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Roomlist* Arena::CreateMaybeMessage< ::Roomlist >(Arena* arena) {
  return Arena::CreateInternal< ::Roomlist >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Roommake* Arena::CreateMaybeMessage< ::Roommake >(Arena* arena) {
  return Arena::CreateInternal< ::Roommake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Roominsert* Arena::CreateMaybeMessage< ::Roominsert >(Arena* arena) {
  return Arena::CreateInternal< ::Roominsert >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Chatmsg* Arena::CreateMaybeMessage< ::Chatmsg >(Arena* arena) {
  return Arena::CreateInternal< ::Chatmsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
